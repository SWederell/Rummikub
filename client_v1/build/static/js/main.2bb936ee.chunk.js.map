{"version":3,"sources":["game/Tile.js","game/TileGroup.js","game/GameArea.js","game/TileStand.js","images/undo.svg","images/next.svg","images/plus.svg","App.js","redux/actions.js","redux/reducers/tileReducerFunctions.js","redux/reducers/tilesReducer.js","redux/reducers/index.js","redux/store.js","SocketContainer.js","index.js"],"names":["Container","styled","div","props","tile","error","chooseColour","colour","EmptyContainer","isDraggingOver","Number","span","Tile","id","index","number","slice","draggableId","type","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","role","aria-label","InnerContainer","OuterContainer","Handle","isDragDisabled","TileGroup","group","tiles","droppableId","direction","droppableProps","map","key","placeholder","GameArea","areaDisplayOrder","tileGroups","tileGroup","TileStand","standDisplayOrder","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref","svgRef","title","fill","viewBox","width","height","ForwardRef","forwardRef","ControlContainer","ButtonContainer","ButtonText","p","mapDispatchToProps","moveTile","result","socket","payload","undoMove","startTurn","connect","state","ownProps","tilesReducer","previousStates","standToArea","gameID","initialDrawComplete","onDragEnd","onClick","disabled","style","emit","moveTilesAndGroups","tempState","destination","SourcePrefix","DestinationPrefix","newDisplayOrderSource","Array","from","newDisplayOrderDestination","splice","draw","updateServerFromClient","startTileGroup","finishTileGroup","movedTile","uuid","newTileGroupDisplayOrder","newTiles","newTileGroup","checkValidityOfTilesInGroup","startTiles","newStart","finishTiles","newFinish","includes","RemoveEmptyTileGroup","tempTileGroups","forEach","sendToServer","newDisplayOrder","groupIndex","array","find","findIndex","newTileGroups","RecieveDrawnTiles","newTuple","newTileGroupId","createNewTileGroup","console","log","set","groupType","newTileSet","tileColour","tileId","tileColours","repeatedTileColours","push","prevNumber","undefined","initialState","gameStart","rootReducer","combineReducers","require","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","updateGameID","updateGameState","gameState","receiveDrawnTile","on","children","io","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bb936ee.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 6vmin;\r\n  height: 6vmin;\r\n  border-radius: 5px;\r\n  background-color: ${(props) =>\r\n    props.tile.error ? chooseColour(props.colour) : \"wheat\"};\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  color: ${(props) =>\r\n    props.tile.error ? \"wheat\" : chooseColour(props.colour)};\r\n`;\r\n\r\nconst EmptyContainer = styled.div`\r\n  display: ${(props) => (props.isDraggingOver ? \"none\" : \"block\")};\r\n  width: 6vmin;\r\n  min-width: 6vmin;\r\n  height: 6vmin;\r\n  border-radius: 5px;\r\n  background-color: inherit;\r\n  border: 2px dashed black;\r\n`;\r\n\r\nconst chooseColour = (colour) => {\r\n  switch (colour) {\r\n    case \"red\":\r\n      return \"red\";\r\n    case \"bla\":\r\n      return \"black\";\r\n    case \"blu\":\r\n      return \"blue\";\r\n\r\n    case \"yel\":\r\n      return \"goldenrod\";\r\n\r\n    default:\r\n      return \"wheat\";\r\n  }\r\n};\r\nconst Number = styled.span``;\r\n\r\nconst Tile = (props) => {\r\n  // console.log(this.props);\r\n  const { id, tile, index } = props;\r\n\r\n  let colour = \"red\";\r\n  let number = 20;\r\n\r\n  if (id && id !== \"empty\") {\r\n    colour = id.slice(0, 3);\r\n    number = id.slice(4, 6);\r\n  }\r\n\r\n  return id !== \"empty\" ? (\r\n    <Draggable draggableId={id} index={index} type=\"tile\">\r\n      {(provided, snapshot) => (\r\n        <Container\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n          colour={colour}\r\n          tile={tile}\r\n          isDraggingOver={snapshot.isDraggingOver}\r\n        >\r\n          {number === \"jo\" ? (\r\n            <p>\r\n              <span role=\"img\" aria-label=\"joker\">\r\n                😊\r\n              </span>\r\n            </p>\r\n          ) : (\r\n            <Number>{+number}</Number>\r\n          )}\r\n        </Container>\r\n      )}\r\n    </Draggable>\r\n  ) : (\r\n    <EmptyContainer />\r\n  );\r\n};\r\n\r\nexport default Tile;\r\n","import React from \"react\";\r\nimport Tile from \"./Tile\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\n\r\nconst InnerContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-contents: center:\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst OuterContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 5px;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst Handle = styled.div`\r\n  display: ${(props) => (props.isDragDisabled ? \"none\" : \"block\")};\r\n  width: 90%;\r\n  height: 2px;\r\n  margin: 5px auto;\r\n  border-top: 1px solid black;\r\n  border-bottom: 1px solid black;\r\n`;\r\n\r\nconst TileGroup = (props) => {\r\n  const { group, index } = props;\r\n  const { tiles, id } = group;\r\n  // console.log({ group });\r\n  return (\r\n    <Draggable draggableId={id} index={index}>\r\n      {(provided) => (\r\n        <OuterContainer {...provided.draggableProps} ref={provided.innerRef}>\r\n          <Droppable droppableId={id} direction=\"horizontal\" type=\"tile\">\r\n            {(provided) => (\r\n              <InnerContainer\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n              >\r\n                {tiles.map((tile, index) => {\r\n                  return (\r\n                    <Tile\r\n                      id={tile.id}\r\n                      key={`${tile.id}`}\r\n                      index={index}\r\n                      tile={tile}\r\n                    />\r\n                  );\r\n                })}\r\n                {provided.placeholder}\r\n              </InnerContainer>\r\n            )}\r\n          </Droppable>\r\n          <Handle\r\n            {...provided.dragHandleProps}\r\n            isDragDisabled={id.slice(-5) === \"empty\"}\r\n          />\r\n        </OuterContainer>\r\n      )}\r\n    </Draggable>\r\n\r\n    //   <p>test</p>\r\n  );\r\n};\r\n\r\nexport default TileGroup;\r\n","import React from \"react\";\r\nimport TileGroup from \"./TileGroup\";\r\nimport styled from \"styled-components\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\n\r\nconst Container = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  align-content: space-around;\r\n  background-color: white;\r\n  padding: 10px;\r\n  height: 60vh;\r\n  width: 80vw;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst GameArea = (props) => {\r\n  const { areaDisplayOrder, tileGroups } = props;\r\n  // console.log({ areaDisplayOrder, tileGroups });\r\n  return (\r\n    <Droppable droppableId=\"gameArea\" direction=\"horizontal\" type=\"group\">\r\n      {(provided) => (\r\n        <Container {...provided.droppableProps} ref={provided.innerRef}>\r\n          {areaDisplayOrder.map((tileGroup, index) => {\r\n            return (\r\n              <TileGroup\r\n                group={tileGroups[tileGroup]}\r\n                key={tileGroups[tileGroup].id}\r\n                index={index}\r\n              />\r\n            );\r\n          })}\r\n          {provided.placeholder}\r\n        </Container>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\n\r\nexport default GameArea;\r\n","import React from \"react\";\r\nimport TileGroup from \"./TileGroup\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  align-content: space-around;\r\n  background-color: darkgreen;\r\n  padding: 10px;\r\n  height: 15vh;\r\n  width: 70vw;\r\n`;\r\n\r\nconst TileStand = (props) => {\r\n  const { standDisplayOrder, tileGroups } = props;\r\n\r\n  return (\r\n    <Droppable droppableId=\"tileStand\" direction=\"horizontal\" type=\"group\">\r\n      {(provided) => (\r\n        <Container {...provided.droppableProps} ref={provided.innerRef}>\r\n          {standDisplayOrder.map((tileGroup, index) => {\r\n            return (\r\n              <TileGroup\r\n                group={tileGroups[tileGroup]}\r\n                key={tileGroups[tileGroup].id}\r\n                index={index}\r\n              />\r\n            );\r\n          })}\r\n          {provided.placeholder}\r\n        </Container>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\n\r\nexport default TileStand;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M488,256A232.014,232.014,0,0,1,114.533,439.892,233.557,233.557,0,0,1,32.508,318.447a24,24,0,1,1,46.235-12.894,185.25,185.25,0,0,0,65.083,96.312A182.236,182.236,0,0,0,256,440c101.458,0,184-82.542,184-184S357.458,72,256,72a182.241,182.241,0,0,0-112.175,38.135,184.6,184.6,0,0,0-32.139,31.792l-18.549,5.456L90.161,93.807A231.977,231.977,0,0,1,488,256ZM62.771,223.024l136-40a24,24,0,1,0-13.543-46.048L78.282,168.43,71.962,54.669a24,24,0,1,0-47.924,2.662l8,144a24,24,0,0,0,30.734,21.693Z\"\n});\n\nvar SvgUndo = function SvgUndo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#FFFFFF\",\n    id: \"Solid\",\n    viewBox: \"0 0 512 512\",\n    width: 512,\n    height: 512,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgUndo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/undo.803e6ac1.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m383.432 280h-335.432a24 24 0 0 1 0-48h335.432l24 24zm-46.461 136.971 144-144a24 24 0 0 0 0-33.942l-144-144a24 24 0 0 0 -33.942 33.942l127.03 127.029-127.03 127.029a24 24 0 0 0 33.942 33.942z\"\n});\n\nvar SvgNext = function SvgNext(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Solid\",\n    height: 512,\n    fill: \"#FFFFFF\",\n    viewBox: \"0 0 512 512\",\n    width: 512,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgNext, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/next.d6c4e222.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m224 0c-123.710938 0-224 100.289062-224 224s100.289062 224 224 224 224-100.289062 224-224c-.140625-123.652344-100.347656-223.859375-224-224zm112 232h-104v104c0 4.417969-3.582031 8-8 8s-8-3.582031-8-8v-104h-104c-4.417969 0-8-3.582031-8-8s3.582031-8 8-8h104v-104c0-4.417969 3.582031-8 8-8s8 3.582031 8 8v104h104c4.417969 0 8 3.582031 8 8s-3.582031 8-8 8zm0 0\"\n});\n\nvar SvgPlus = function SvgPlus(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: \"448pt\",\n    viewBox: \"0 0 448 448\",\n    width: \"448pt\",\n    fill: \"#FFFFFF\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgPlus, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/plus.3c5a41f9.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport GameArea from \"./game/GameArea\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { MOVE_TILE, UNDO_MOVE, START_TURN } from \"./redux/actions\";\nimport TileStand from \"./game/TileStand\";\n\nimport { ReactComponent as UndoSVG } from \"./images/undo.svg\";\nimport { ReactComponent as NextSVG } from \"./images/next.svg\";\nimport { ReactComponent as DrawSVG } from \"./images/plus.svg\";\n\nconst Container = styled.div`\n  text-align: center;\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: max(calc(10px + 2vmin), 6px);\n  font-family: Verdana, sans-serif;\n  color: white;\n  flex-direction: column;\n`;\n\nconst ControlContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nconst ButtonContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 8vh;\n  font-size: 2vh;\n  margin-left: 10px;\n  margin-right: 10px;\n  cursor: pointer;\n  userselect: \"false\";\n`;\n\nconst ButtonText = styled.p`\n  margin-top: 2px;\n  margin-bottom: 2px;\n`;\n\nconst App = (props) => {\n  const {\n    areaDisplayOrder,\n    gameID,\n    initialDrawComplete,\n    moveTile,\n    previousStates,\n    socket,\n    standDisplayOrder,\n    standToArea,\n    tileGroups,\n    undoMove,\n    // state,\n  } = props;\n\n  const onDragEnd = (result) => {\n    moveTile(result, socket);\n  };\n\n  const _endTurn = () => {\n    socket.emit(\"end-turn\");\n  };\n\n  const _drawTiles = () => {\n    if (initialDrawComplete) {\n      socket.emit(\"draw-tile\", { number: 1, gameID: gameID });\n    } else socket.emit(\"draw-tile\", { number: 14, gameID: gameID });\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Container>\n        <p>\n          Socket: {socket.id}, GameID: {gameID}\n        </p>\n        <GameArea areaDisplayOrder={areaDisplayOrder} tileGroups={tileGroups} />\n\n        <ControlContainer>\n          <ButtonContainer\n            onClick={undoMove}\n            disabled={previousStates.length === 0}\n          >\n            <UndoSVG fill=\"#FA2\" style={{ height: \"8vh\", width: \"8vh\" }} />\n            <ButtonText>Undo Move</ButtonText>\n          </ButtonContainer>\n\n          <TileStand\n            standDisplayOrder={standDisplayOrder}\n            tileGroups={tileGroups}\n          />\n\n          <ButtonContainer>\n            {standToArea === true ? (\n              <div onClick={_endTurn}>\n                <NextSVG fill=\"#FA2\" style={{ height: \"8vh\", width: \"8vh\" }} />\n                <ButtonText style={{ width: \"100%\" }}>End Turn</ButtonText>\n              </div>\n            ) : (\n              <div onClick={_drawTiles}>\n                <DrawSVG fill=\"#FA2\" style={{ height: \"8vh\", width: \"8vh\" }} />\n                <ButtonText>\n                  {initialDrawComplete ? \"Draw & End Turn\" : \"Draw Tile\"}\n                </ButtonText>\n              </div>\n            )}\n          </ButtonContainer>\n        </ControlContainer>\n      </Container>\n    </DragDropContext>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const {\n    areaDisplayOrder,\n    standDisplayOrder,\n    tileGroups,\n    previousStates,\n    standToArea,\n    gameID,\n    initialDrawComplete,\n  } = state.tilesReducer;\n  return {\n    ...ownProps,\n    areaDisplayOrder,\n    standDisplayOrder,\n    tileGroups,\n    previousStates,\n    standToArea,\n    gameID,\n    state,\n    initialDrawComplete,\n  };\n};\n\nconst mapDispatchToProps = {\n  moveTile: (result, socket) => ({\n    type: MOVE_TILE,\n    payload: {\n      result,\n      socket,\n    },\n  }),\n  undoMove: () => ({ type: UNDO_MOVE }),\n  startTurn: () => ({ type: START_TURN }),\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// Game Actions\r\n\r\nexport const MOVE_TILE = \"MOVE_TILE\";\r\nexport const UNDO_MOVE = \"UNDO_MOVE\";\r\nexport const START_TURN = \"START_TURN\";\r\nexport const DRAW_TILES = \"DRAW_TILES\";\r\n\r\n// SocketIO Actions\r\n\r\nexport const SIO_STARTING_GAME = \"SIO_STARTING_GAME\";\r\nexport const SIO_DRAW_TILE = \"SIO_DRAW_TILE\";\r\nexport const SIO_RECEIVE_DRAWN_TILE = \"SIO_RECEIVE_TILE\";\r\nexport const SIO_UPDATE_GAME_ID = \"SIO_UPDATE_GAME_ID\";\r\nexport const SIO_UPDATE_GAME_STATE = \"SIO_UPDATE_GAME_STATE\";\r\n","import uuid from \"react-uuid\";\r\n\r\nexport const moveTilesAndGroups = (state, { result, socket }) => {\r\n  var tempState = {\r\n    ...state,\r\n    previousStates: [...state.previousStates, state],\r\n  };\r\n\r\n  const { destination, source, draggableId, type } = result;\r\n\r\n  if (!destination) {\r\n    return tempState;\r\n  }\r\n\r\n  if (\r\n    destination.droppableId === source.droppableId &&\r\n    destination.index === source.index\r\n  ) {\r\n    return tempState;\r\n  }\r\n\r\n  // =======================\r\n  // Handle Tile Group Moves\r\n  // =======================\r\n  if (type === \"group\") {\r\n    let SourcePrefix = source.droppableId.slice(0, 3);\r\n    let DestinationPrefix = destination.droppableId.slice(0, 3);\r\n\r\n    // console.log({ destination, source });\r\n    switch (DestinationPrefix) {\r\n      case \"gam\":\r\n        DestinationPrefix = \"area\";\r\n        break;\r\n      case \"til\":\r\n        DestinationPrefix = \"stand\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    switch (SourcePrefix) {\r\n      case \"gam\":\r\n        SourcePrefix = \"area\";\r\n        break;\r\n      case \"til\":\r\n        SourcePrefix = \"stand\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (DestinationPrefix === \"area\" && SourcePrefix === \"stand\") {\r\n      tempState = {\r\n        ...tempState,\r\n        standToArea: true,\r\n      };\r\n    }\r\n\r\n    const newDisplayOrderSource = Array.from(\r\n      tempState[`${SourcePrefix}DisplayOrder`]\r\n    );\r\n    const newDisplayOrderDestination = Array.from(\r\n      tempState[`${DestinationPrefix}DisplayOrder`]\r\n    );\r\n\r\n    if (source.droppableId === destination.droppableId) {\r\n      newDisplayOrderDestination.splice(source.index, 1);\r\n      newDisplayOrderDestination.splice(\r\n        destination.index === newDisplayOrderDestination.length\r\n          ? destination.index - 1\r\n          : destination.index,\r\n        0,\r\n        draggableId\r\n      );\r\n    } else {\r\n      if (tempState.tileGroups[draggableId].draw) {\r\n        tempState = {\r\n          ...tempState,\r\n          tileGroups: {\r\n            ...tempState.tileGroups,\r\n            [draggableId]: {\r\n              ...tempState.tileGroups[draggableId],\r\n              draw: false,\r\n            },\r\n          },\r\n        };\r\n      }\r\n      newDisplayOrderSource.splice(source.index, 1);\r\n      newDisplayOrderDestination.splice(\r\n        destination.index === newDisplayOrderDestination.length\r\n          ? destination.index - 1\r\n          : destination.index,\r\n        0,\r\n        draggableId\r\n      );\r\n    }\r\n\r\n    tempState[`${SourcePrefix}DisplayOrder`] = newDisplayOrderSource;\r\n    tempState[`${DestinationPrefix}DisplayOrder`] = newDisplayOrderDestination;\r\n    // console.log({ tempState });\r\n\r\n    updateServerFromClient(socket, tempState);\r\n    return tempState;\r\n  }\r\n\r\n  const startTileGroup = tempState.tileGroups[source.droppableId];\r\n\r\n  let finishTileGroup = tempState.tileGroups[destination.droppableId];\r\n  const movedTile = {\r\n    ...startTileGroup.tiles[source.index],\r\n  };\r\n\r\n  // ==============================\r\n  // Handle Dropping on Empty Group\r\n  // ==============================\r\n\r\n  if (destination.droppableId.slice(-5) === \"empty\") {\r\n    let DestinationPrefix = destination.droppableId.slice(0, 3);\r\n\r\n    switch (DestinationPrefix) {\r\n      case \"are\":\r\n        DestinationPrefix = \"area\";\r\n        break;\r\n      case \"sta\":\r\n        DestinationPrefix = \"stand\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    finishTileGroup = {\r\n      id: `${uuid()}`,\r\n      type: DestinationPrefix,\r\n      tiles: [],\r\n    };\r\n\r\n    const newTileGroupDisplayOrder = [\r\n      ...tempState[`${DestinationPrefix}DisplayOrder`],\r\n    ];\r\n    newTileGroupDisplayOrder.splice(\r\n      newTileGroupDisplayOrder.length - 1,\r\n      0,\r\n      finishTileGroup.id\r\n    );\r\n\r\n    tempState = {\r\n      ...tempState,\r\n      [`${DestinationPrefix}DisplayOrder`]: newTileGroupDisplayOrder,\r\n    };\r\n  }\r\n\r\n  // Moving Tiles within the same group\r\n\r\n  if (startTileGroup === finishTileGroup) {\r\n    const newTiles = Array.from(startTileGroup.tiles);\r\n    newTiles.splice(source.index, 1);\r\n    newTiles.splice(destination.index, 0, movedTile);\r\n\r\n    const newTileGroup = {\r\n      ...startTileGroup,\r\n      tiles: checkValidityOfTilesInGroup(newTiles, startTileGroup.draw),\r\n    };\r\n\r\n    tempState = {\r\n      ...tempState,\r\n      tileGroups: {\r\n        ...tempState.tileGroups,\r\n        [newTileGroup.id]: newTileGroup,\r\n      },\r\n    };\r\n    updateServerFromClient(socket, tempState);\r\n    return tempState;\r\n  }\r\n\r\n  // Moving tiles between groups\r\n\r\n  const startTiles = Array.from(startTileGroup.tiles);\r\n  startTiles.splice(source.index, 1);\r\n  let newStart = {\r\n    ...startTileGroup,\r\n    tiles: checkValidityOfTilesInGroup(startTiles, startTileGroup.draw),\r\n  };\r\n\r\n  const finishTiles = Array.from(finishTileGroup.tiles);\r\n  finishTiles.splice(destination.index, 0, movedTile);\r\n  const newFinish = {\r\n    ...finishTileGroup,\r\n    tiles: checkValidityOfTilesInGroup(finishTiles, finishTileGroup.draw),\r\n  };\r\n\r\n  if (\r\n    tempState.areaDisplayOrder.includes(destination.droppableId) &&\r\n    tempState.standDisplayOrder.includes(source.droppableId)\r\n  ) {\r\n    tempState = { ...tempState, standToArea: true };\r\n  }\r\n  tempState = {\r\n    ...tempState,\r\n    tileGroups: {\r\n      ...state.tileGroups,\r\n      [newStart.id]: newStart,\r\n      [newFinish.id]: newFinish,\r\n    },\r\n  };\r\n\r\n  if (newStart.tiles.length === 0) {\r\n    tempState = RemoveEmptyTileGroup(tempState, newStart);\r\n  }\r\n\r\n  updateServerFromClient(socket, tempState);\r\n  return tempState;\r\n};\r\n\r\nconst updateServerFromClient = (socket, state) => {\r\n  let tempTileGroups = {};\r\n\r\n  Object.keys(state.tileGroups).forEach((key) => {\r\n    if (state.tileGroups[key].type === \"area\") {\r\n      tempTileGroups[key] = { ...state.tileGroups[key] };\r\n    }\r\n  });\r\n  let sendToServer = {\r\n    tileGroups: tempTileGroups,\r\n    areaDisplayOrder: state.areaDisplayOrder,\r\n    gameID: state.gameID,\r\n  };\r\n\r\n  socket.emit(\"update-server-from-client\", sendToServer);\r\n};\r\n\r\nexport const createNewTileGroup = (state, type) => {\r\n  const newTileGroupId = `${uuid()}`;\r\n  let newTileGroup = { id: newTileGroupId, type: type, tiles: [] };\r\n  let newDisplayOrder = [...state[`${type}DisplayOrder`]];\r\n\r\n  newDisplayOrder.splice(newDisplayOrder.length - 1, 0, newTileGroupId);\r\n\r\n  let tempState = {\r\n    ...state,\r\n    tileGroups: { ...state.tileGroups, [newTileGroupId]: newTileGroup },\r\n    [`${type}DisplayOrder`]: newDisplayOrder,\r\n  };\r\n\r\n  return { tempState, newTileGroup };\r\n};\r\n\r\nexport const findIndex = (array, find) => {\r\n  for (let i = 0; i < array.length; i++) {\r\n    if (array[i] === find) {\r\n      return i;\r\n    }\r\n  }\r\n};\r\n\r\nexport const RemoveEmptyTileGroup = (state, group) => {\r\n  let tempState = { ...state };\r\n  let type = group.type;\r\n\r\n  let newDisplayOrder = [...state[`${type}DisplayOrder`]];\r\n\r\n  let groupIndex = findIndex(newDisplayOrder, group.id);\r\n  newDisplayOrder.splice(groupIndex, 1);\r\n\r\n  let newTileGroups = { ...tempState.tileGroups };\r\n  delete newTileGroups[group.id];\r\n\r\n  tempState = {\r\n    ...tempState,\r\n    tileGroups: newTileGroups,\r\n    [`${type}DisplayOrder`]: newDisplayOrder,\r\n  };\r\n\r\n  return tempState;\r\n};\r\n\r\nexport const RecieveDrawnTiles = (state, payload) => {\r\n  const newTuple = createNewTileGroup(state, \"stand\");\r\n  let newTileGroup = newTuple.newTileGroup;\r\n  let tempState = { ...newTuple.tempState };\r\n\r\n  if (payload.length === 14) {\r\n    tempState = { ...tempState, initialDrawComplete: true };\r\n  }\r\n\r\n  newTileGroup = {\r\n    ...newTileGroup,\r\n    draw: true,\r\n    tiles: [...payload],\r\n  };\r\n\r\n  tempState = {\r\n    ...tempState,\r\n    tileGroups: {\r\n      ...tempState.tileGroups,\r\n      [newTileGroup.id]: newTileGroup,\r\n    },\r\n  };\r\n\r\n  console.log({ tempState });\r\n\r\n  return tempState;\r\n};\r\n\r\nexport const startTurn = (state) => {\r\n  return {\r\n    ...state,\r\n    previousStates: [],\r\n  };\r\n};\r\n\r\nexport const checkValidityOfTilesInGroup = (set, draw) => {\r\n  let newTileSet = set;\r\n\r\n  if (draw) {\r\n    return newTileSet;\r\n  }\r\n\r\n  // check that group has 3 or more tiles in it.\r\n\r\n  if (newTileSet.length < 3) {\r\n    // if less than 3 tiles in group ---- ILLEGAL SET\r\n    newTileSet = newTileSet.map((tile) => {\r\n      return { ...tile, error: true };\r\n    });\r\n    return newTileSet;\r\n  } else {\r\n    // reset error state on tiles\r\n    newTileSet = newTileSet.map((tile) => {\r\n      return { ...tile, error: false };\r\n    });\r\n  }\r\n\r\n  // detect if run or group\r\n\r\n  let groupType;\r\n  let tileColour = \"\";\r\n  for (let i = 0; i < newTileSet.length; i++) {\r\n    let tile = newTileSet[i];\r\n    const tileId = tile.id;\r\n    if (tileId.slice(0, 3) === \"jok\") {\r\n      continue;\r\n    }\r\n\r\n    if (tileColour === \"\") {\r\n      tileColour = tileId.slice(0, 3);\r\n      continue;\r\n    }\r\n    if (tileId.slice(0, 3) === tileColour) {\r\n      groupType = \"run\";\r\n      break;\r\n    } else {\r\n      groupType = \"group\";\r\n      break;\r\n    }\r\n  }\r\n\r\n  // check tiles are all different colours and the same number\r\n  if (groupType === \"group\") {\r\n    let tileColours = [];\r\n    let repeatedTileColours = [];\r\n    let number;\r\n    newTileSet = newTileSet.map((tile) => {\r\n      // console.log({ tileColours, repeatedTileColours, number, tile });\r\n\r\n      const tileId = tile.id;\r\n      const colour = tileId.slice(0, 3);\r\n\r\n      if (colour === \"jok\") {\r\n        // if the tile is a joker\r\n      } else if (tileColours.length === 0) {\r\n        // if this is the first non-joker tile\r\n        tileColours.push(colour);\r\n        number = +tileId.slice(4, 6);\r\n      } else if (tileColours.includes(colour)) {\r\n        // if the colour is the same as a previous tile\r\n        repeatedTileColours.push(colour);\r\n      } else if (+tileId.slice(4, 6) !== number) {\r\n        // if the number is not the same\r\n      } else {\r\n        tileColours.push(colour);\r\n      }\r\n      return tile;\r\n    });\r\n\r\n    newTileSet = newTileSet.map((tile) => {\r\n      // run through tile set and set error state on each tile\r\n      const colour = tile.id.slice(0, 3);\r\n      if (repeatedTileColours.includes(colour)) {\r\n        return { ...tile, error: true };\r\n      }\r\n      return { ...tile, error: false };\r\n    });\r\n  }\r\n\r\n  // check that tiles are the same colour and in ascending order\r\n  if (groupType === \"run\") {\r\n    let tileColour = \"\";\r\n    let prevNumber;\r\n\r\n    newTileSet = newTileSet.map((tile, index) => {\r\n      // console.log({ tileColour, tile, index, newTileSet });\r\n\r\n      const tileId = tile.id;\r\n      const colour = tileId.slice(0, 3);\r\n      const number = +tileId.slice(4, 6);\r\n      // console.log({ colour, number });\r\n\r\n      if (colour === \"jok\") {\r\n        // if the tile is a joker\r\n        if (prevNumber !== undefined) {\r\n          // if this joker is not this first one\r\n          prevNumber += 1;\r\n        }\r\n        return { ...tile, error: false };\r\n      }\r\n\r\n      if (tileColour === \"\") {\r\n        // if this tile is the first non-joker tile\r\n        tileColour = colour;\r\n        prevNumber = number;\r\n        return { ...tile, error: false };\r\n      }\r\n      if (colour !== tileColour) {\r\n        // if this tile is not the same colour\r\n        return { ...tile, error: true };\r\n      }\r\n\r\n      if (number === prevNumber + 1) {\r\n        // if the number is the next in the sequence\r\n        prevNumber = number;\r\n        return { ...tile, error: false };\r\n      } else {\r\n        prevNumber = number;\r\n        return { ...tile, error: true };\r\n      }\r\n    });\r\n  }\r\n\r\n  return newTileSet;\r\n};\r\n","import {\r\n  MOVE_TILE,\r\n  UNDO_MOVE,\r\n  START_TURN,\r\n  SIO_RECEIVE_DRAWN_TILE,\r\n  SIO_UPDATE_GAME_ID,\r\n  SIO_UPDATE_GAME_STATE,\r\n} from \"../actions\";\r\n\r\nimport {\r\n  moveTilesAndGroups,\r\n  startTurn,\r\n  RecieveDrawnTiles,\r\n} from \"./tileReducerFunctions\";\r\n\r\nconst initialState = {\r\n  gameStart: false,\r\n  gameID: \"\",\r\n  standToArea: false,\r\n  initialDrawComplete: false,\r\n  tileGroups: {\r\n    \"stand-empty\": {\r\n      id: \"stand-empty\",\r\n      type: \"stand\",\r\n      tiles: [{ id: \"empty\" }],\r\n    },\r\n    \"area-empty\": {\r\n      id: \"area-empty\",\r\n      type: \"area\",\r\n      tiles: [{ id: \"empty\" }],\r\n    },\r\n  },\r\n  areaDisplayOrder: [\"area-empty\"],\r\n  standDisplayOrder: [\"stand-empty\"],\r\n  previousStates: [],\r\n};\r\n\r\nconst tilesReducer = (state = initialState, action) => {\r\n  // console.log(action);\r\n  switch (action.type) {\r\n    case MOVE_TILE:\r\n      return moveTilesAndGroups(state, action.payload);\r\n\r\n    case UNDO_MOVE:\r\n      const previousStates = state.previousStates;\r\n      if (previousStates.length === 0) {\r\n        return state;\r\n      }\r\n      const tempState = { ...previousStates[previousStates.length - 1] };\r\n      return tempState;\r\n\r\n    case START_TURN:\r\n      return startTurn(state);\r\n\r\n    case SIO_RECEIVE_DRAWN_TILE:\r\n      return RecieveDrawnTiles(state, action.payload);\r\n\r\n    case SIO_UPDATE_GAME_ID:\r\n      return {\r\n        ...state,\r\n        gameID: action.payload,\r\n      };\r\n    case SIO_UPDATE_GAME_STATE:\r\n      return {\r\n        ...state,\r\n        tileGroups: { ...state.tileGroups, ...action.payload.tileGroups },\r\n        areaDisplayOrder: action.payload.areaDisplayOrder,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { tilesReducer };\r\n","import { tilesReducer } from \"./tilesReducer\";\r\n\r\nconst { combineReducers } = require(\"redux\");\r\n\r\nconst rootReducer = combineReducers({ tilesReducer });\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  SIO_RECEIVE_DRAWN_TILE,\r\n  SIO_UPDATE_GAME_ID,\r\n  SIO_UPDATE_GAME_STATE,\r\n} from \"./redux/actions\";\r\n\r\nconst SocketContainer = (props) => {\r\n  const { socket, receiveDrawnTile, updateGameID, updateGameState } = props;\r\n\r\n  socket.on(\"join-game\", (gameID) => {\r\n    updateGameID(gameID);\r\n  });\r\n\r\n  socket.on(\"send-tiles\", (tiles) => {\r\n    receiveDrawnTile(tiles);\r\n  });\r\n\r\n  socket.on(\"update-client-from-server\", (gameState) => {\r\n    console.log(\"update-client-from-server called\");\r\n    updateGameState(gameState);\r\n  });\r\n\r\n  return <Fragment>{props.children}</Fragment>;\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {};\r\n};\r\nconst mapDispatchToProps = {\r\n  updateGameID: (gameID) => ({ type: SIO_UPDATE_GAME_ID, payload: gameID }),\r\n  updateGameState: (gameState) => ({\r\n    type: SIO_UPDATE_GAME_STATE,\r\n    payload: gameState,\r\n  }),\r\n  receiveDrawnTile: (tiles) => ({\r\n    type: SIO_RECEIVE_DRAWN_TILE,\r\n    payload: tiles,\r\n  }),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SocketContainer);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport SocketContainer from \"./SocketContainer\";\n\nimport io from \"socket.io-client\";\n\nconst socket = io(\"http://127.0.0.1:4001\");\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <SocketContainer socket={socket}>\n        <App socket={socket} />\n      </SocketContainer>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}